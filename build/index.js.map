{"version":3,"file":"index.js","mappings":"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","sources":["webpack://myguten-block/./src/edit.js","webpack://myguten-block/external window [\"wp\",\"element\"]","webpack://myguten-block/webpack/bootstrap","webpack://myguten-block/webpack/runtime/compat get default export","webpack://myguten-block/webpack/runtime/define property getters","webpack://myguten-block/webpack/runtime/hasOwnProperty shorthand","webpack://myguten-block/webpack/runtime/make namespace object","webpack://myguten-block/./src/index.js"],"sourcesContent":["// edit.js\r\n\r\n// Load dependencies\r\nconst { __ } = wp.i18n;\r\nconst { Component, Fragment } = wp.element;\r\nconst { InspectorControls, InnerBlocks, MediaUpload, MediaUploadCheck } = wp.editor;\r\nconst { PanelBody, Button, ResponsiveWrapper, Spinner } = wp.components;\r\nconst { compose } = wp.compose;\r\nconst { withSelect } = wp.data;\r\n\r\nconst ALLOWED_MEDIA_TYPES = ['image'];\r\n\r\nclass ImageSelectorEdit extends Component {\r\n    render() {\r\n        const { attributes, setAttributes, bgImage, className } = this.props;\r\n        const { bgImageId } = attributes;\r\n        const instructions = <p>{__('To edit the background image, you need permission to upload media.', 'image-selector-example')}</p>;\r\n\r\n        let styles = {};\r\n        if (bgImage && bgImage.source_url) {\r\n            styles = { backgroundImage: `url(${bgImage.source_url})` };\r\n        }\r\n\r\n        const onUpdateImage = (image) => {\r\n            setAttributes({\r\n                bgImageId: image.id,\r\n            });\r\n        };\r\n\r\n        const onRemoveImage = () => {\r\n            setAttributes({\r\n                bgImageId: undefined,\r\n            });\r\n        };\r\n\r\n        return (\r\n            <Fragment>\r\n                <InspectorControls>\r\n                    <PanelBody\r\n                        title={__('Background settings', 'image-selector-example')}\r\n                        initialOpen={true}\r\n                    >\r\n                        <div className=\"wp-block-image-selector-example-image\">\r\n                            <MediaUploadCheck fallback={instructions}>\r\n                                <MediaUpload\r\n                                    title={__('Background image', 'image-selector-example')}\r\n                                    onSelect={onUpdateImage}\r\n                                    allowedTypes={ALLOWED_MEDIA_TYPES}\r\n                                    value={bgImageId}\r\n                                    render={({ open }) => (\r\n                                        <Button\r\n                                            className={!bgImageId ? 'editor-post-featured-image__toggle' : 'editor-post-featured-image__preview'}\r\n                                            onClick={open}>\r\n                                            {!bgImageId && (__('Set background image', 'image-selector-example'))}\r\n                                            {!!bgImageId && !bgImage && <Spinner />}\r\n                                            {!!bgImageId && bgImage &&\r\n                                                <ResponsiveWrapper\r\n                                                    naturalWidth={bgImage.media_details.width}\r\n                                                    naturalHeight={bgImage.media_details.height}\r\n                                                >\r\n                                                    <img src={bgImage.source_url} alt={__('Background image', 'image-selector-example')} />\r\n                                                </ResponsiveWrapper>\r\n                                            }\r\n                                        </Button>\r\n                                    )}\r\n                                />\r\n                            </MediaUploadCheck>\r\n                            {!!bgImageId && bgImage &&\r\n                                <MediaUploadCheck>\r\n                                    <MediaUpload\r\n                                        title={__('Background image', 'image-selector-example')}\r\n                                        onSelect={onUpdateImage}\r\n                                        allowedTypes={ALLOWED_MEDIA_TYPES}\r\n                                        value={bgImageId}\r\n                                        render={({ open }) => (\r\n                                            <Button onClick={open} isDefault isLarge>\r\n                                                {__('Replace background image', 'image-selector-example')}\r\n                                            </Button>\r\n                                        )}\r\n                                    />\r\n                                </MediaUploadCheck>\r\n                            }\r\n                            {!!bgImageId &&\r\n                                <MediaUploadCheck>\r\n                                    <Button onClick={onRemoveImage} isLink isDestructive>\r\n                                        {__('Remove background image', 'image-selector-example')}\r\n                                    </Button>\r\n                                </MediaUploadCheck>\r\n                            }\r\n                        </div>\r\n                    </PanelBody>\r\n                </InspectorControls>\r\n                <div\r\n                    className={className}\r\n                    style={styles}\r\n                >\r\n                    <InnerBlocks />\r\n                </div>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    withSelect((select, props) => {\r\n        const { getMedia } = select('core');\r\n        const { bgImageId } = props.attributes;\r\n\r\n        return {\r\n            bgImage: bgImageId ? getMedia(bgImageId) : null,\r\n        };\r\n    }),\r\n)(ImageSelectorEdit);","module.exports = window[\"wp\"][\"element\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const el = wp.element.createElement;\r\nconst registerBlockType = wp.blocks.registerBlockType;\r\nconst TextControl = wp.components.TextControl;\r\nconst TextareaControl = wp.components.TextareaControl;\r\n\r\nregisterBlockType('dc-references-block/dc-references-block', {\r\n    title: 'Title',\r\n    icon: 'edit',\r\n    category: 'common',\r\n\r\n    attributes: {\r\n        blockValue: {\r\n            type: 'string',\r\n            source: 'meta',\r\n            meta: 'dc_references_block_field'\r\n        },\r\n        // Add two new attributes\r\n        name: {\r\n            type: 'string',\r\n            source: 'meta',\r\n            meta: 'dc_references_block_field_name'\r\n        },\r\n        desc: {\r\n            type: 'string',\r\n            source: 'meta',\r\n            meta: 'dc_references_block_field_desc'\r\n        },\r\n    },\r\n\r\n    edit: function (props) {\r\n        const className = props.className;\r\n        const setAttributes = props.setAttributes;\r\n\r\n        // Original element with onChange event as an anonymous function\r\n        const text = el(TextControl, {\r\n            label: 'write here name of company',\r\n            value: props.attributes.blockValue,\r\n            key: 'companyName',\r\n            onChange: function (value) {\r\n                setAttributes({ blockValue: value });\r\n            }\r\n        });\r\n\r\n        //Add two new elements\r\n        const secondText = el(TextControl, {\r\n            label: 'Write your name',\r\n            value: props.attributes.name,\r\n            key: 'username',\r\n            onChange: function (value) {\r\n                setAttributes({ name: value });\r\n            }\r\n        });\r\n\r\n        const textArea = el(TextareaControl, {\r\n            label: 'Write a description',\r\n            value: props.attributes.desc,\r\n            key: 'desc',\r\n            onChange: function (value) {\r\n                setAttributes({ desc: value });\r\n            }\r\n        });\r\n\r\n        return el(\r\n            'div',\r\n            { className: className },\r\n            // Children of the main div as an array\r\n            [text, secondText, textArea]\r\n        );\r\n    },\r\n\r\n    save: function (props) {\r\n        //return null;\r\n    }\r\n});\r\n\r\nimport edit from './edit';\r\n\r\nconst { __ } = wp.i18n;\r\nconst { InnerBlocks } = wp.editor;\r\n\r\nregisterBlockType('image-selector-example/image-selector', {\r\n    title: __('Image Selector Example', 'image-selector-example'),\r\n    icon: 'format-image',\r\n    category: 'common',\r\n    keywords: [\r\n        __('Image Selector', 'image-selector-example'),\r\n    ],\r\n\r\n    supports: {\r\n        align: ['full'],\r\n    },\r\n\r\n    attributes: {\r\n        bgImageId: {\r\n            type: 'number',\r\n        },\r\n    },\r\n\r\n    edit,\r\n\r\n    save() {\r\n        return (\r\n            <InnerBlocks.Content />\r\n        );\r\n    },\r\n});\r\n\r\nconst { useBlockProps } = wp.blockEditor;\r\n\r\nconst { Button } = wp.components;\r\nconst { MediaUpload, MediaUploadCheck } = wp.blockEditor;\r\n\r\nconst ALLOWED_MEDIA_TYPES = ['image'];\r\n\r\nfunction MyMediaUploader({ mediaIDs, onSelect }) {\r\n    return (\r\n        <MediaUploadCheck>\r\n            <MediaUpload\r\n                onSelect={onSelect}\r\n                allowedTypes={ALLOWED_MEDIA_TYPES}\r\n                value={mediaIDs}\r\n                render={({ open }) => (\r\n                    <Button\r\n                        onClick={open}\r\n                        className=\"button button-large\"\r\n                    >{mediaIDs.length < 1 ? 'Upload/Select Images' : 'Edit'}</Button>\r\n                )}\r\n                gallery\r\n                multiple\r\n            />\r\n        </MediaUploadCheck>\r\n    );\r\n}\r\n\r\n// Note: I purposely used \"slider2\" in the block name.\r\nregisterBlockType('theme/slider2', {\r\n    apiVersion: 2,\r\n    title: 'Slider 2',\r\n    category: 'layout',\r\n    attributes: {\r\n        images: {\r\n            type: 'array',\r\n            source: 'query',\r\n            selector: '.slider-item',\r\n            default: [],\r\n            query: {\r\n                mediaID: {\r\n                    type: 'number',\r\n                    source: 'attribute',\r\n                    attribute: 'data-id',\r\n                    selector: 'img',\r\n                },\r\n                mediaURL: {\r\n                    type: 'string',\r\n                    source: 'attribute',\r\n                    attribute: 'src',\r\n                    selector: 'img',\r\n                },\r\n                thumbnail: {\r\n                    type: 'string',\r\n                    source: 'attribute',\r\n                    attribute: 'data-thumb',\r\n                    selector: 'img',\r\n                },\r\n            },\r\n        },\r\n    },\r\n\r\n    edit({ attributes, setAttributes }) {\r\n        const onSelect = (items) => {\r\n            setAttributes({\r\n                images: items.map(item => {\r\n                    return {\r\n                        mediaID: parseInt(item.id, 10),\r\n                        mediaURL: item.url,\r\n                        thumbnail: item.sizes.thumbnail.url,\r\n                    };\r\n                }),\r\n            });\r\n        };\r\n\r\n        const blockProps = useBlockProps();\r\n\r\n        return (\r\n            <div {...blockProps}>\r\n                {attributes.images.length >= 1 ? (\r\n                    <div className=\"BG_slider\">\r\n                        {attributes.images.map(item => (\r\n                            <div className=\"slider-item\" key={'image-' + item.mediaID}>\r\n                                <img src={item.thumbnail || item.mediaURL} />\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                ) : <p>Click the button and add some images to your slider! :)</p>}\r\n\r\n                <MyMediaUploader\r\n                    mediaIDs={attributes.images.map(item => item.mediaID)}\r\n                    onSelect={onSelect}\r\n                />\r\n            </div>\r\n        );\r\n    },\r\n\r\n    save({ attributes }) {\r\n        if (attributes.images.length < 1) {\r\n            return null;\r\n        }\r\n\r\n        const blockProps = useBlockProps.save({ className: 'BG_slider' });\r\n\r\n        return (\r\n            <div {...blockProps}>\r\n                {attributes.images.map(item => (\r\n                    <div className=\"slider-item\" key={'image-' + item.mediaID}>\r\n                        <img src={item.mediaURL} data-id={item.mediaID} data-thumb={item.thumbnail} />\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        );\r\n    },\r\n});"],"names":["__","wp","i18n","Component","Fragment","element","InspectorControls","InnerBlocks","MediaUpload","MediaUploadCheck","editor","PanelBody","Button","ResponsiveWrapper","Spinner","components","compose","withSelect","data","ALLOWED_MEDIA_TYPES","ImageSelectorEdit","render","attributes","setAttributes","bgImage","className","props","bgImageId","instructions","styles","source_url","backgroundImage","onUpdateImage","image","id","onRemoveImage","undefined","open","media_details","width","height","select","getMedia","el","createElement","registerBlockType","blocks","TextControl","TextareaControl","title","icon","category","blockValue","type","source","meta","name","desc","edit","text","label","value","key","onChange","secondText","textArea","save","keywords","supports","align","useBlockProps","blockEditor","MyMediaUploader","mediaIDs","onSelect","length","apiVersion","images","selector","default","query","mediaID","attribute","mediaURL","thumbnail","items","map","item","parseInt","url","sizes","blockProps"],"sourceRoot":""}